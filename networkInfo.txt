input of NN: game state (hand of gems/cards, board of gems / cards / nobles)
	Gems in hand: Each type is one node: 0->4 are values
	Gems on board: Each type is one node: 0->4 are values
	Cards in hand: Each type is one node: 0->20 are values
	Cards on board: 12 options: each has 5 types of gem and 5 types of bonus and 1 type of points/* issue is that card placement on board doesn't matter in game, but could for this... */
	Nobles on board: Each of the 3 nobles has 1 for points, and 5 for types of gems (1->4)
	Points for player: 1 node from 0->15

Total: 5 + 5 + 5 + 12*(5+5+1) + 1 + 3*(5+1) = 166

??? Use a bias node???


output of NN: the "goodness" of a board state (1 node)
goal: decision to make (pick up gems (which ones), buy card (which one))


to decide a move, we loop through the possible next states and then pick the one with the best "goodness". (maybe look more moves in advance with some minimax shit???)
Rinse and repeat.

Run X many games. At the end, throw away the worst and breed (combine with mutation) the best.
